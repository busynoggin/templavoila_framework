<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<T3DataStructure>
	<meta type="array">
		<langDisable>1</langDisable>
		<disableDataPreview>1</disableDataPreview>
	</meta>
	<ROOT type="array">
		<tx_templavoila type="array">
			<title>ROOT</title>
			<description>Inner mapping to #root-mapping-hook</description>
		</tx_templavoila>
		<type>array</type>
		<el type="array">
			<field_group_rule type="array">
				<type>no_map</type>
				<tx_templavoila type="array">
					<title>Bottom Rule</title>
					<sample_data type="array">
						<numIndex index="0"></numIndex>
					</sample_data>
					<eType>select</eType>
				</tx_templavoila>
				<TCEforms type="array">
					<config type="array">
						<type>select</type>
						<items type="array">
							<numIndex index="0" type="array">
								<numIndex index="0">LLL:EXT:templavoila_framework/Resources/Private/Language/locallang.xlf:fce.selector.default</numIndex>
								<numIndex index="1">0</numIndex>
							</numIndex>
							<numIndex index="1" type="array">
								<numIndex index="0">LLL:EXT:templavoila_framework/Resources/Private/Language/locallang.xlf:fce.selector.on</numIndex>
								<numIndex index="1">1</numIndex>
							</numIndex>
							<numIndex index="3" type="array">
								<numIndex index="0">LLL:EXT:templavoila_framework/Resources/Private/Language/locallang.xlf:fce.selector.off</numIndex>
								<numIndex index="1">2</numIndex>
							</numIndex>
						</items>
						<default>0</default>
					</config>
					<label>LLL:EXT:templavoila_framework/Resources/Private/Language/locallang.xlf:fce.bottomRule.label</label>
				</TCEforms>
			</field_group_rule>
			<field_column_group_library type="array">
				<type>no_map</type>
				<tx_templavoila type="array">
					<title>Column Group Library</title>
					<sample_data type="array">
						<numIndex index="0"></numIndex>
					</sample_data>
					<eType>TypoScriptObject</eType>
					<TypoScriptObjPath>plugin.tx_templavoilaframework.columnGroupSetup</TypoScriptObjPath>
				</tx_templavoila>
			</field_column_group_library>
			<field_column_1 type="array">
				<tx_templavoila type="array">
					<title>Column 1</title>
					<description>Outer to first column</description>
					<sample_data type="array">
						<numIndex index="0"></numIndex>
					</sample_data>
					<eType>ce</eType>
					<tags>div:outer</tags>
					<TypoScript>
<![CDATA[
## Setup various renderings for responsive
15 = CASE
15 {
	key.data = register:columnModuleRenderMode
	full = LOAD_REGISTER
	full {
		columnGroupWidth.data = register:containerWidth
		containerWidth.data = register:containerWidth
		classColumnGroupDistribution = full full-full-full-full
		classColumnGroupDistribution.noTrimWrap = | ||
		classColumnDistribution = full
		classColumnDistribution.noTrimWrap = | ||
	}
	intermediate = LOAD_REGISTER
	intermediate {
		columnGroupWidth.data = register:containerWidth
		tempContainerWidth.data = register:containerWidth
		tempContainerWidth.dataWrap = (|-{register:globalGutter})/2
		containerWidth.data = register:tempContainerWidth
		containerWidth.prioriCalc = intval
		classColumnGroupDistribution = intermediate half-half-half-half
		classColumnGroupDistribution.noTrimWrap = | ||
		classColumnDistribution = half
		classColumnDistribution.noTrimWrap = | ||
	}
	default = LOAD_REGISTER
	default {
		columnGroupWidth.data = register:containerWidth
		tempContainerWidth.data = register:containerWidth
		tempContainerWidth.dataWrap = (|-({register:globalGutter}*3))/4
		containerWidth.data = register:tempContainerWidth
		containerWidth.prioriCalc = intval
		classColumnGroupDistribution = quarter-quarter-quarter-quarter
		classColumnGroupDistribution.noTrimWrap = | ||
		classColumnDistribution = quarter
		classColumnDistribution.noTrimWrap = | ||
	}
}

## Set up intial maxImageWidth and the CSS for the column width adding it to the aggregate TVFW Column Modulw CSS for the page.
## Also, let system know there is a content element present for when it is in the feature content block
20 = LOAD_REGISTER
20 {
	maxImageWidth.data = register:containerWidth
	containerElementPresent = 1
	tempAggregateColumnModuleCss.data = register:aggregateColumnModuleCss
	thisCss {
		data = register:containerWidth
		dataWrap = .column-1-c{register:tx_templavoila_pi1.parentRec.uid} |
		noTrimWrap = | {width:|px;}|
	}
	aggregateColumnModuleCss.dataWrap = {register:tempAggregateColumnModuleCss} {register:thisCss}
}

## Reset the maxImageWidth if it is smaller than minFullImageWidth set for the site.
## Had to make this a COA in order to get the if statement to work correctly
25 = COA
25 {
	if {
		value.data = register:maxImageWidth
		isGreaterThan.data = register:tempMinFullImageWidth
	}
	10 = LOAD_REGISTER
	10.maxImageWidth.data = register:tempMinFullImageWidth
}

## Record current nesting level
30 = CASE
30 {
	key.data = register:nestingLevel
	default = LOAD_REGISTER
	default.nestingLevel = 1
	1 = LOAD_REGISTER
	1 {
		nestingLevel = 2
		level1ContainerWidth.data = register:columnGroupWidth
	}
}

## Write the opening HTML for the column based on whether v1 or v2 rendering
40 = CASE
40 {
	key.data = register:tvfwRenderMode
	1 = TEXT
	1.dataWrap = <div class="{register:columnGroupClass} fourColumnGroup"><div class="column column-1 oneQuarter" style="width:{register:containerWidth}px;float:left;margin-right:{register:globalGutter}px;">
	2 = TEXT
	2.dataWrap = <div class="{register:columnGroupClass} four-column-group{register:classColumnGroupDistribution}"><div class="column{register:classColumnDistribution} quarter column-1 column-1-c{register:tx_templavoila_pi1.parentRec.uid}">
	default = TEXT
	default.dataWrap = <div class="{register:columnGroupClass} fourColumnGroup"><div class="column column-1 oneQuarter" style="width:{register:containerWidth}px;float:left;margin-right:{register:globalGutter}px;">
}

## Render the records
50 = RECORDS
50 {
	source.current = 1
	tables = tt_content
}

## Write the ending HTML for the column based on whether v1 or v2 rendering
60 = TEXT
60.value = </div>

]]>
                    </TypoScript>
					<enableDragDrop>1</enableDragDrop>
					<oldStyleColumnNumber type="integer">0</oldStyleColumnNumber>
				</tx_templavoila>
				<TCEforms type="array">
					<config type="array">
						<type>group</type>
						<internal_type>db</internal_type>
						<allowed>tt_content</allowed>
						<size>5</size>
						<maxitems>200</maxitems>
						<minitems>0</minitems>
						<multiple>1</multiple>
						<show_thumbs>1</show_thumbs>
					</config>
					<label></label>
				</TCEforms>
			</field_column_1>
			<field_column_2 type="array">
				<tx_templavoila type="array">
					<title>Column 2</title>
					<description>Outer to second column</description>
					<sample_data type="array">
						<numIndex index="0"></numIndex>
					</sample_data>
					<eType>ce</eType>
					<tags>div:outer</tags>
					<TypoScript>
<![CDATA[
## Set up the CSS for the column width adding it to the aggregate TVFW Column Modulw CSS for the page.
15 = LOAD_REGISTER
15 {
	tempAggregateColumnModuleCss.data = register:aggregateColumnModuleCss
	thisCss {
		data = register:containerWidth
		dataWrap = .column-2-c{register:tx_templavoila_pi1.parentRec.uid} |
		noTrimWrap = | {width:|px;}|
	}
	aggregateColumnModuleCss.dataWrap = {register:tempAggregateColumnModuleCss} {register:thisCss}
}

## Write the opening HTML for the column based on whether v1 or v2 rendering
30 = CASE
30 {
	key.data = register:tvfwRenderMode
	1 = TEXT
	1.dataWrap = <div class="column column-2 oneQuarter" style="width:{register:containerWidth}px;float:left;margin-right:{register:globalGutter}px;">
	2 = TEXT
	2.dataWrap = <div class="column{register:classColumnDistribution} column-2 column-2-c{register:tx_templavoila_pi1.parentRec.uid}">
	default = TEXT
	default.dataWrap = <div class="column column-2 oneQuarter" style="width:{register:containerWidth}px;float:left;margin-right:{register:globalGutter}px;">
}

## Render the records
40 = RECORDS
40 {
	source.current = 1
	tables = tt_content
}


## Write the ending HTML for the column based on whether v1 or v2 rendering
50 = TEXT
50.value = </div>

]]>

                    </TypoScript>
					<enableDragDrop>1</enableDragDrop>
					<oldStyleColumnNumber type="integer">0</oldStyleColumnNumber>
				</tx_templavoila>
				<TCEforms type="array">
					<config type="array">
						<type>group</type>
						<internal_type>db</internal_type>
						<allowed>tt_content</allowed>
						<size>5</size>
						<maxitems>200</maxitems>
						<minitems>0</minitems>
						<multiple>1</multiple>
						<show_thumbs>1</show_thumbs>
					</config>
					<label></label>
				</TCEforms>
			</field_column_2>
			<field_column_3 type="array">
				<tx_templavoila type="array">
					<title>Column 3</title>
					<description>Outer to third column</description>
					<sample_data type="array">
						<numIndex index="0"></numIndex>
					</sample_data>
					<eType>ce</eType>
					<tags>div:outer</tags>
					<TypoScript>
<![CDATA[
## Set up intial maxImageWidth and the CSS for the column width adding it to the aggregate TVFW Column Modulw CSS for the page.
15 = LOAD_REGISTER
15 {
	tempAggregateColumnModuleCss.data = register:aggregateColumnModuleCss
	thisCss {
		data = register:containerWidth
		dataWrap = .column-3-c{register:tx_templavoila_pi1.parentRec.uid} |
		noTrimWrap = | {width:|px;}|
	}
	aggregateColumnModuleCss.dataWrap = {register:tempAggregateColumnModuleCss} {register:thisCss}
}

## Write the opening HTML for the column based on whether v1 or v2 rendering
30 = CASE
30 {
	key.data = register:tvfwRenderMode
	1 = TEXT
	1.dataWrap = <div class="column column-3 oneQuarter" style="width:{register:containerWidth}px;float:left;">
	2 = TEXT
	2.dataWrap = <div class="column{register:classColumnDistribution} column-3 column-3-c{register:tx_templavoila_pi1.parentRec.uid}">
	default = TEXT
	default.dataWrap = <div class="column column-3 oneQuarter" style="width:{register:containerWidth}px;float:left;">
}

## Render the records
40 = RECORDS
40 {
	source.current = 1
	tables = tt_content
}

## Write the ending HTML for the column based on whether v1 or v2 rendering
50 = TEXT
50.value = </div>
]]>

                    </TypoScript>
					<enableDragDrop>1</enableDragDrop>
					<oldStyleColumnNumber type="integer">0</oldStyleColumnNumber>
				</tx_templavoila>
				<TCEforms type="array">
					<config type="array">
						<type>group</type>
						<internal_type>db</internal_type>
						<allowed>tt_content</allowed>
						<size>5</size>
						<maxitems>200</maxitems>
						<minitems>0</minitems>
						<multiple>1</multiple>
						<show_thumbs>1</show_thumbs>
					</config>
					<label></label>
				</TCEforms>
			</field_column_3>
			<field_column_4 type="array">
				<tx_templavoila type="array">
					<title>Column 4</title>
					<description>Outer to fourth column</description>
					<sample_data type="array">
						<numIndex index="0"></numIndex>
					</sample_data>
					<eType>ce</eType>
					<tags>div:outer</tags>
					<TypoScript>
<![CDATA[
## Set up intial maxImageWidth and the CSS for the column width adding it to the aggregate TVFW Column Modulw CSS for the page.
15 = LOAD_REGISTER
15 {
	tempAggregateColumnModuleCss.data = register:aggregateColumnModuleCss
	thisCss {
		data = register:containerWidth
		dataWrap = .column-4-c{register:tx_templavoila_pi1.parentRec.uid} |
		noTrimWrap = | {width:|px;}|
	}
	aggregateColumnModuleCss.dataWrap = {register:tempAggregateColumnModuleCss} {register:thisCss}
}

## Write the opening HTML for the column based on whether v1 or v2 rendering
30 = CASE
30 {
	key.data = register:tvfwRenderMode
	1 = TEXT
	1.dataWrap = <div class="column column-4 oneQuarter" style="width:{register:containerWidth}px;float:right;">
	2 = TEXT
	2.dataWrap = <div class="column{register:classColumnDistribution} column-4 column-4-c{register:tx_templavoila_pi1.parentRec.uid}">
	default = TEXT
	default.dataWrap = <div class="column column-4 oneQuarter" style="width:{register:containerWidth}px;float:right;">
}

## Render the records
40 = RECORDS
40 {
	source.current = 1
	tables = tt_content
}

## Write the ending HTML for the column based on whether v1 or v2 rendering

50 = CASE
50 {
	key.data = register:tvfwRenderMode
	1 = TEXT
	1.dataWrap = </div><div class="clearOnly">&nbsp;</div></div><!-- end .fourColumnGroup  -->
	2 = TEXT
	2.dataWrap = </div></div><!-- end .four-column-group  -->
	default = TEXT
	default .dataWrap = </div><div class="clearOnly">&nbsp;</div></div><!-- end .fourColumnGroup  -->
}

## Set nesting level and containerWidth to what they should be based on nesting level
90 = CASE
90 {
	key.data = register:nestingLevel
	default = LOAD_REGISTER
	default {
		nestingLevel = 0
		containerWidth.data = register:originalContainerWidth
		maxImageWidth.data = register:containerWidth
	}
	2 = LOAD_REGISTER
	2 {
		nestingLevel = 1
		containerWidth.data = register:level1ContainerWidth
		maxImageWidth.data = register:containerWidth
	}
}
]]>
                    </TypoScript>
					<enableDragDrop>1</enableDragDrop>
					<oldStyleColumnNumber type="integer">1</oldStyleColumnNumber>
				</tx_templavoila>
				<TCEforms type="array">
					<config type="array">
						<type>group</type>
						<internal_type>db</internal_type>
						<allowed>tt_content</allowed>
						<size>5</size>
						<maxitems>200</maxitems>
						<minitems>0</minitems>
						<multiple>1</multiple>
						<show_thumbs>1</show_thumbs>
					</config>
					<label></label>
				</TCEforms>
			</field_column_4>
		</el>
	</ROOT>
</T3DataStructure>